%! Package = palettize-base
%! Author = Jander Moreira
%! Date = 2024

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{palettize-base}[2024/07/26 v0.1 Provides tools to create color palettes.]


\pgfkeys{
    palettize/.cd,
    palette/.code = {\PLTUsePalette{#1}},
}

\NewDocumentCommand{\PLTSet}{ >{ \TrimSpaces } m }{%
    \pgfkeys{palettize/.cd, #1}%
}


\RequirePackage{xcolor}
\RequirePackage{colorinfo}

% Code

\ExplSyntaxOn

% Variants
\cs_generate_variant:Nn \int_set:Nn { cn }
\cs_generate_variant:Nn \seq_set_split:Nnn { cnn }
\cs_generate_variant:Nn \seq_map_inline:Nn { cn }
\cs_generate_variant:Nn \regex_extract_once:nnNTF { neNTF }

% Variables
\seq_new:N \g_palette_list_seq

% Code

% PLTCreatePalette: creates a new empty palette
% #1: palette name
\cs_new:Npn \new_palette:n #1 {
    % \cs_if_exist:cTF { g_#1_colors_seq } {
    %     \PackageWarning{palettize}{Palette~#1~already~exists.~Creation~ignored.}
    % } {
    \seq_put_right:Nn \g_palette_list_seq { #1 }
    \seq_new:c { g_#1_colors_seq }
    \int_new:c { g_#1_current_int }
    \cs_if_exist:NTF \g_current_palette_tl { } {
        \tl_new:N \g_current_palette_tl
        \tl_gset:Nn \g_current_palette_tl { #1 }
    }
    % }
    \reset_palette:n { #1 }
}
\NewExpandableDocumentCommand{\PLTCreatePalette}{ m }{
    \new_palette:n { #1 }
}

% \PLTUseCurrentColor: sets PLTFGColor and PLTBGColor to the current color
% #1: (optional) palette name; default: current palette
\tl_new:N \l_current_fg_color_tl
\tl_new:N \l_current_bg_color_tl
\cs_new:Npn \select_current_color:n #1 {
    \regex_extract_once:neNTF {
        \b(.*?)\b\s*on\b\s*(.*)\b
    } {
        \seq_item:cn { g_#1_colors_seq  }{ \int_use:c { g_#1_current_int } + 1 }
    } \l_color_seq {
        \exp_args:NNe \tl_set:Nn \l_current_fg_color_tl { \seq_item:Nn \l_color_seq { 2 } }
        \exp_args:NNe \tl_set:Nn \l_current_bg_color_tl { \seq_item:Nn \l_color_seq { 3 } }
    } {
        \tl_set:Nn \l_current_fg_color_tl { . }
        \exp_args:NNe \tl_set:Nn \l_current_bg_color_tl {
            \seq_item:cn { g_#1_colors_seq  }{ \int_use:c { g_#1_current_int } + 1 }
        }
    }
}
\NewDocumentCommand{\PLTUseCurrentColor}{ o }{
    \IfValueTF{#1}{
        \select_current_color:n { #1 }
    }{
        \select_current_color:n { \g_current_palette_tl }
    }
    \colorlet{PLTFGColor}{\tl_use:N \l_current_fg_color_tl}
    \colorlet{PLTBGColor}{\tl_use:N \l_current_bg_color_tl}
}

% plt@GetCurrentColorIndex: returns current index for a palette
% #2: (optional) palette name
\cs_new:Npn \get_current_color:nn #1#2 {
    \tl_clear_new:c { #1 }
    \exp_args:Nne \tl_gset:cn { #1 } { \int_use:c { g_#2_current_int } }
}
\NewDocumentCommand{\plt@GetCurrentColorIndex}{ m o }{
    \IfValueTF{#2}{
        \exp_args:Ne \get_current_color:nn { #1 } { #2 }
    }{
        \exp_args:Ne \get_current_color:nn { #1 }{ \g_current_palette_tl }
    }
}


% plt@SetCurrentColorIndex: sets current index for a palette
% #1: index
% #2: (optional) palette name
\cs_new:Npn \set_current_color:nn #1#2 {
    \int_set:cn { g_#2_current_int } { #1 }
}
\NewDocumentCommand{\plt@SetCurrentColorIndex}{ m o }{
    \IfValueTF{#2}{
        \set_current_color:nn { #1 } { #2 }
        \PLTUseCurrentColor[#2]
    }{
        \set_current_color:nn { #1 } { \g_current_palette_tl }
        \PLTUseCurrentColor[\g_current_palette_tl]
    }
}


% PLTUsePalette: sets named palette as current
% #1: palette name
\cs_new:Npn \use_palette:n #1 {
    \tl_set:Nn \g_current_palette_tl { #1 }
}
\NewDocumentCommand{\PLTUsePalette}{ m }{
    \use_palette:n { #1 }
    \PLTUseCurrentColor
}


% PLTSetPalette: defines the colors for the palette
% #1: palette name
% #2: comma-separated list of colors
\cs_new:Npn \set_palette:nn #1#2 {
    \seq_set_split:cnn { g_#1_colors_seq } { , } { #2 }
}
\NewDocumentCommand{\PLTSetPalette}{ m m }{
    \set_palette:nn { #1 } { #2 }
}


% PLTResetPaletteLoop: sets current color to the first color
% #1: palette name
\cs_new:Npn \reset_palette:n #1 {
    \int_set:cn { g_#1_current_int } { 0 }
    \tl_gset:Nn \g_current_fg_color_tl {
        \seq_item:cn { g_#1_colors_seq  }{ 1 }
    }
}
\NewDocumentCommand{\PLTResetLoop}{ o }{
    \IfValueTF{#1}{
        \reset_palette:n { #1 }
        \PLTUseCurrentColor[#1]
    }{
        \reset_palette:n  { \g_current_palette_tl }
        \PLTUseCurrentColor[\g_current_palette_tl]
    }
}


% PLTFGColorName: gets current foreground color
\NewDocumentCommand{\PLTFGColorName}{ o }{
    \IfValueTF{#1}{
        \select_current_color:n { #1 }
    }{
        \select_current_color:n { \g_current_palette_tl }
    }
    \tl_use:N \l_current_fg_color_tl
}


% PLTBGColorName: gets current background color
\NewDocumentCommand{\PLTBGColorName}{ o }{
    \IfValueTF{#1}{
        \select_current_color:n { #1 }
    }{
        \select_current_color:n { \g_current_palette_tl }
    }
    \tl_use:N \l_current_bg_color_tl
}

% PLTPaletteName: expands to the current palette name
\NewDocumentCommand{\PLTPaletteName}{ }{
    \tl_use:N \g_current_palette_tl
}

% PLTGetPaletteNameCS: creates a macro with the current palette name
\NewDocumentCommand{\plt@GetPaletteNameCS}{ m }{
    \exp_args:Nne \tl_gset:cn { #1 } \g_current_palette_tl
}


% PLTNextColor: moves current color pointer to the next color
% #1: (optional) palette name
\cs_new:Npn \step_palette:n #1 {
    \exp_args:Nno \int_set:cn { g_#1_current_int } {
        \int_mod:nn { \int_use:c { g_#1_current_int } + 1 } {
            \seq_count:c { g_#1_colors_seq }
        }
    }
}
\NewDocumentCommand{\PLTNextColor}{ o }{
    \IfValueTF{#1}{
        \step_palette:n { #1 }
        \PLTUseCurrentColor[#1]
    }{
        \step_palette:n { \g_current_palette_tl }
        \PLTUseCurrentColor[\g_current_palette_tl]
    }
}


% PLTIteratePaletteList: sequentialy executes commands on each created
% palette; palette name is available in \PLTCurrentPalette
\NewExpandableDocumentCommand{\PLTIteratePaletteList}{ +m }{
    \begingroup
    \tl_clear_new:N \PLTCurrentPalette
    \seq_map_inline:Nn \g_palette_list_seq {
        \tl_set:Nn \PLTCurrentPalette { ##1 }
        #1
    }
    \endgroup
}

% PLTIteratePalette: sequentialy executes commands on each color of a given palette;
%   color name is available in \PLTCurrentColor
\NewExpandableDocumentCommand{\PLTIteratePalette}{ m +m }{
    \begingroup
    \ifstrempty{#1}{
        \csedef{plt@local@Palette}{\PLTPaletteName}
    }{
        \csedef{plt@local@Palette}{#1}
        \PLTUsePalette{#1}
    }
    \PLTResetLoop
    \seq_map_inline:cn { g_ \plt@local@Palette _colors_seq } {
    %\PLTUseCurrentColor[\plt@local@Palette]
        #2
        \PLTNextColor
    }
    \endgroup%
}


% PLTUseResource: loads resoources
% #1: comma-separetad list of resource names
\seq_new:N \g_loaded_resources_seq
\seq_put_right:Nn \g_loaded_resources_seq { default }
\cs_new:Npn \load_resources:n #1 {
    \clist_clear_new:N \l_resource_name_clist
    \clist_set:Nn \l_resource_name_clist { #1 }
    \clist_map_inline:Nn \l_resource_name_clist {
    %\seq_map_inline:Nn \g_loaded_resources_seq {\PackageWarning{plt}{##1}}
        \str_if_empty:nTF { ##1 } { } {%else
            \seq_if_in:NnTF \g_loaded_resources_seq { ##1 } { } {% else
                \input{palettize-##1.tex}
                \seq_gput_right:Nn \g_loaded_resources_seq {##1}
            %\PackageWarning{palettize}{Loading~##1}
            }
        }
    }
}
\NewDocumentCommand{\PLTUseResource}{ >{ \TrimSpaces } m }{
    \load_resources:n { #1 }
}

\ExplSyntaxOff


\@ifclassloaded{beamer}{
    \cslet{plt@Visible}\visible  % hijack beamer's \visible
}{
    \NewDocumentCommand{\plt@Visible}{ d<> }{}  % do nothing command
}


% Default palette
\ifbool{plt@LoadAllPalettes}{
    \PLTUseResource{
        sliced-citrus,
        toasted-peach,
        midnight-waters,
        sting-has-sprung,
    }
}{}
\PLTUseResource{nightfall-ambiance}
\PLTUsePalette{nightfall-ambiance}


% PLTColorBrightness: sets a macro with brightness of a color (0 to 100)
% #1: macro
% #2: color name
\NewDocumentCommand{\PLTColorBrightness}{ m m }{%
    \colorlet{plt@GrayColor}[gray]{#2}%
    \colorInfo{plt@GrayColor}%
    \pgfmathsetmacro{#1}{int(100 * \colorValue)}%
}

% PLTAutoContrastColorLet: chooses a foreground color base on
% bg and fg colors
% #1: name of new color
% #2: foreground color
% #3: background color
\NewDocumentCommand{\PLTAutoContrastColorLet}{ m m m }{%
    \colorlet{plt@local@foreground}{#2}%
    \colorlet{plt@local@background}{#3}%
    \PLTColorBrightness{\plt@local@FGBrightness}{plt@local@foreground}%
    \PLTColorBrightness{\plt@local@BGBrightness}{plt@local@background}%
    \ifnumless{\plt@local@FGBrightness}{35}{%
        \ifnumless{\plt@local@BGBrightness}{50}{%
            \colorlet{#1}{plt@local@foreground!5}%
        }{%
            \colorlet{#1}{plt@local@foreground!50!black}%
        }%
    }{%
        \ifnumless{\plt@local@BGBrightness}{50}{%
            \pgfmathsetmacro{\plt@local@ColorMix}{int(ln(1 + abs(\plt@local@BGBrightness - 50))/ln(51) * 100)}%
            \colorlet{#1}{plt@local@foreground!\plt@local@ColorMix}%
        }{%
            \colorlet{#1}{plt@local@foreground!15!black}%
        }%
    }%
}
